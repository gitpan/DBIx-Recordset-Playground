package DBIx::Recordset::Cookbook;

use 5.008;
use strict;
use warnings;

use DBI;
use DBIx::Recordset;


require Exporter;

our @ISA = qw(Exporter);

# Items to export into callers namespace by default. Note: do not export
# names by default without a very good reason. Use EXPORT_OK instead.
# Do not simply export all your public functions/methods/constants.

# This allows declaration	use DBIx::Recordset::Cookbook ':all';
# If you do not need this, moving things directly into @EXPORT or @EXPORT_OK
# will save memory.
our %EXPORT_TAGS = ( 'all' => [ qw(
	
) ] );

our @EXPORT_OK = ( @{ $EXPORT_TAGS{'all'} } );

our @EXPORT = qw(	
);

our $VERSION = '0.02';


# Preloaded methods go here.





1;
__END__
# Below is stub documentation for your module. You'd better edit it!

=head1 NAME

  DBIx::Recordset::Cookbook - working sample usages of DBIx::Recordset

=head1 INTRODUCTION

This document serves two purposes. One, it makes it easy to get started
with DBIx::Recordset. Two, it serves as a place for those experienced with
recordset to examine the code to discover how to make usage of recordset
even simpler.

By working the examples in the order given in this document, you will be
able to create a database and manipulate it, all from DBIx::Recordset.

Let the games begin!

=head1 CREATE THE DATABASE

=head2 Our Generic Connection Script:

<tt>pod_code "scripts/dbconn.pl", 1</tt>

=head2 And Now the Script to Create the Tables:

<tt>pod_code "scripts/create-tables.pl", 1</tt>

=head2 POPULATE THE DATABASE

<tt>pod_code "scripts/populate-person.pl", 1</tt>

=head1 SYNOPSIS

=head2 Selecting data where values are in an arrayref:

<tt>pod_code "scripts/select-using-aref.pl", 1</tt>

=head2 Using Manual Indexing

<tt>pod_code "scripts/synopsis-manual-indexing.pl", 1</tt>

=head2 Reusing a Set Object to do Another Search:

<tt>pod_code "scripts/do-another-search.pl", 1</tt>

=head2 Using C<Next()> to Iterate over a Result Set:

<tt>pod_code "scripts/all-users-with.pl", 1</tt>



=head1 AUTHOR

T. M. Brannon, tbone@cpan.org


=cut
